
import java.util.*;
public class FracCalc {

    

	public static void main(String[] args) 
    {
        // TODO: Read the input from the user and call produceAnswer with an equation
		System.out.println("Type your equation.");
		Scanner userInput = new Scanner (System.in);
		String Input = userInput.nextLine();
    	while (!Input.equals("quit")){
    		System.out.println(produceAnswer(Input)); 
    		Input = userInput.nextLine();

    	}
    	
    }
    // ** IMPORTANT ** DO NOT DELETE THIS FUNCTION.  This function will be used to test your code
    // This function takes a String 'input' and produces the result
    //
    // input is a fraction string that needs to be evaluated.  For your program, this will be the user input.
    //      e.g. input ==> "1/2 + 3/4"
    //        
    // The function should return the result of the fraction after it has been calculated
    //      e.g. return ==> "1_1/4"
    
    public static String[] parseSpace(String input){
    	String space= " ";
    	String [] operandsOperator= input.split(space);
    	return operandsOperator;
    }
    
    public static String produceAnswer(String input){ 
        // TODO: Implement this function to produce the solution to the input
    	 //Checkpoint1: takes in a formula and returns the second operand
    	if (input.indexOf(" ") ==-1){
    		return "invalid format";
    	}
    	if (input.equals(" ")){
    		return "Type your equation";
    	}
    	if (input.indexOf("/0") >= 0){
    		return "ERROR: Cannot divide by 0.";
    	}
    	
    	String [] equation = parseSpace(input);
    	int [] store= parseOperand(equation[0]);
    	String result= "";
    	if (equation.length<4){
    		String operand1 = equation [0]; 
			String operand2 = equation [2];   
			String operator = equation [1];
			if (operator.equals("+")){
				result= addFrac(parseOperand(operand1), parseOperand(operand2));
				return result;
			}
			if (operator.equals("-")){
				result= minusFrac(parseOperand(operand1), parseOperand(operand2));
				return result;
			}
			if (operator.equals("*")){
				result= multiply(parseOperand(operand1), parseOperand(operand2));
				return result;
			}
			if (operator.equals("/")){
				result= divide(parseOperand(operand1), parseOperand(operand2));
				return result;
			}
    	}
    	if (equation.length>4){
    		int [] storeCalculation= parseOperand(equation[0]);
    		String storage= "";
    		for (int i=1; i< equation.length;i+=2){
    			if (!equation[i].equals("+")){
    				store= addFrac(storeCalculation, parseOperand(equation[i+1]));
    				storage= result;
    			}
    			if (!equation[i].equals("-")){
    				result= minusFrac(storeCalculation, parseOperand(equation[i+1]));
    				storage= result;
	    		}
	    		if (!equation[i].equals("*")){
    				result= multiply(storeCalculation, parseOperand(equation[i+1]));
    				storage= result;
	    		}
	    		if (!equation[i].equals("/")){
    				result= divide(storeCalculation, parseOperand(equation[i+1]));
    				storage= result;
	    		}else {
	    			return "no result";
	    		}
    		
    		}
    	}
    	
    	return "no results";
    }
        //Checkpoint2: separates the first and second operand into its wholenumber, numerator, and denominator
    	public static int[] parseOperand(String operand){
    		
    		int wholenumber= 0;
    		int numerator= 0;
    		int denominator= 0;
	    		if (operand.indexOf("/")==-1 && (operand.indexOf("_")==-1)){
	    			wholenumber = Integer.parseInt(operand);
	    			numerator=0; 
	    			denominator=1;
	    		}
	    		else if (operand.indexOf("_")==-1 && operand.indexOf("/")>0){
	    			String[] fraction= operand.split("/");
	    			numerator= Integer.parseInt(fraction [0]);
	    			denominator= Integer.parseInt(fraction [1]);
	    		} else {
			    String [] FirstOperand = operand.split("_");
		   		wholenumber = Integer.parseInt(FirstOperand [0]);
		   	    String fraction1 = FirstOperand [1];
		   		String [] Fraction1 = fraction1.split("/");
		        numerator = Integer.parseInt(Fraction1 [0]);
		        denominator = Integer.parseInt(Fraction1 [1]);
	    		}
    		int []insideOperand = {wholenumber, numerator, denominator};
    		return insideOperand;
    		 
    	}
        
    	public static String printAnswer(int [] answer) {
    		int wholenumber =answer[0];
    		int numerator= answer[1];
    		int denominator= answer[2];
    			if (denominator ==0){
    				return "Error: undefined number.";
    			}
	    		if (wholenumber==0 && numerator ==0){
	    		return "0";
	    		}
	    		if (wholenumber==0 && numerator>0){
	    			return (numerator+"/"+denominator);
	    		}
	    		if (wholenumber>0 && numerator==0){
	    			return (wholenumber + " ");
	    		}
	    		if (wholenumber >0 && numerator>0){
	    			return (wholenumber + "_" + numerator+ "/" + denominator);
	    		} else {
	    			return "error";
	    		}
    	}
    	
        //Checkpoint3: performs the calculations according to the operator
    	
        //calculating formula
        
    
       
        	       
   	 // add the the operands 
   	 	public static String addFrac(int [] operand1, int [] operand2){
   	 		int sum= 0;
   	 		if (operand1[1]==0 && operand2[1]== 0 && operand1[2]==1 && operand2[2]==1){
   	 			sum= (operand1[0]+operand2[0]);
   	 			return ("sum is " + sum); 
   	 		}
        	if (operand1[2]== operand2[2] ){
        		int newNumerator= operand1[1]+operand2[1]; 
        		int newWholenumber= operand1[0]+operand2[0]; 
        		if (newNumerator >= operand1[2]){
        			int remainder= newNumerator/operand1[2]; 
        			newNumerator= (newNumerator-(remainder*operand1[2]));
        			return ("sum is "+ newWholenumber+remainder+ "_" + newNumerator + "/" + operand1[2]);
        		}
        		else {
        			return ("sum is" + newWholenumber + "_" + newNumerator+ "/" + operand1[2]);
        		}
        	}
        	if (operand1[2] != operand2[2]){
        		int newDenominator= operand1[2]*operand2[2];
        		int newNumerator= operand1[1]*operand2[2]+operand2[1]*operand1[2]; 
        		int newWholenumber= operand1[0]+operand2[0]; 
        		if (newNumerator >= newDenominator){
        			int remainder= newNumerator/newDenominator; 
        			newNumerator= (newNumerator-(remainder*newDenominator));
        			return ("sum is "+ newWholenumber+remainder+ "_" + newNumerator + "/" + newDenominator);
        		}
        		else {
        			return ("sum is" + newWholenumber + "_" + newNumerator+ "/" + newDenominator);
        		}
        	}
        	else {
    			return ("no calculations performed");
    		}
        }
   	 	
	   	
	   	 // subtract the first operand from the second operand 
   	 	public static String minusFrac(int [] operand1, int [] operand2){
   	 	int difference= 0;
	 		if (operand1[1]==0 && operand2[1]== 0){
	 			difference= (operand1[0]-operand2[0]);
	 			return ("difference is " + difference); 
	 		}
	 		if (operand1[2]== operand2[2] ){
        		int newNumerator= operand1[1]-operand2[1]; 
        		int newWholenumber= operand1[0]-operand2[0]; 
        		if (newNumerator >= operand1[2]){
        			int remainder= newNumerator/operand1[2]; 
        			newNumerator= (newNumerator-(remainder*operand1[2]));
        			return ("difference is "+ newWholenumber+remainder+ "_" + newNumerator + "/" + operand1[2]);
        		}
        		else {
        			return ("sum is" + newWholenumber + "_" + newNumerator+ "/" + operand1[2]);
        		}
        		
         		
	 		}
	 		if (operand1[2] != operand2[2]){
        		int newDenominator= operand1[2]*operand2[2];
        		int newNumerator= operand1[1]*operand2[2]-operand2[1]*operand1[2]; 
        		int newWholenumber= operand1[0]-operand2[0]; 
        		if (newNumerator >= newDenominator){
        			int remainder= newNumerator/newDenominator; 
        			newNumerator= (newNumerator-(remainder*newDenominator));
        			return ("sum is "+ newWholenumber+remainder+ "_" + newNumerator + "/" + newDenominator);
        		}
        		else {
        			return ("difference is" + newWholenumber + "_" + newNumerator+ "/" + newDenominator);
        		}
   	 	     }  
	 		else {
    			return ("no calculations performed");
    		}
        
   	 	}   
	   	 
	   	 // multiply the two operands
   	 	public static String multiply(int [] operand1, int [] operand2){
   	 		int Numerator1=((operand1[0]*operand1[2])+operand1[2]);
   	 		int Numerator2=((operand2[0]*operand2[2])+operand2[2]);
   	 		int newDenominator= operand1[2]*operand2[2];
   	 		int newNumerator= Numerator1+Numerator2;
   	 		return ("product is " + newNumerator+ "/" + newDenominator);
   	 	}
   	 	
   	 	//divide the two operands
   	 	public static String divide(int [] operand1, int [] operand2){
   	 		int Numerator1=((operand1[0]*operand1[2])+operand1[2]);
	 		int Numerator2=((operand2[0]*operand2[2])+operand2[2]);
   	 		int newNumerator= (Numerator1*operand2[2]);
   	 		int newDenominator=  (operand1[2]*Numerator2);
   	 		return ("quotient is " + newNumerator+ "/" + newDenominator);
   	 	}
        
}
    

    // TODO: Fill in the space below with any helper methods that you think you will need
    
